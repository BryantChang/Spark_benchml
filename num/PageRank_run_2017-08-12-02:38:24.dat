17/08/12 02:38:26 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/08/12 02:38:27 WARN SparkConf: Detected deprecated memory fraction settings: [spark.storage.memoryFraction]. As of Spark 1.6, execution and storage memory management are unified. All memory fractions used in the old model are now deprecated and no longer read. If you wish to use the old memory management, you may explicitly enable `spark.memory.useLegacyMode` (not recommended).
17/08/12 02:38:28 INFO log: Logging initialized @2963ms
17/08/12 02:38:28 INFO Server: jetty-9.3.z-SNAPSHOT
17/08/12 02:38:28 INFO Server: Started @3090ms
17/08/12 02:38:28 INFO AbstractConnector: Started ServerConnector@26b894bd{HTTP/1.1,[http/1.1]}{0.0.0.0:4040}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@62da83ed{/jobs,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@499b2a5c{/jobs/json,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@c1fca1e{/jobs/job,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@2db2cd5{/jobs/job/json,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@615f972{/stages,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@73393584{/stages/json,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@1827a871{/stages/stage,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@66238be2{/stages/stage/json,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@200606de{/stages/pool,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@f8908f6{/stages/pool/json,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@2ef8a8c3{/storage,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@63fd4873{/storage/json,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@7544a1e4{/storage/rdd,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@7957dc72{/storage/rdd/json,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@3aacf32a{/environment,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@82c57b3{/environment/json,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@600b0b7{/executors,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@5ea502e0{/executors/json,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@473b3b7a{/executors/threadDump,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@77b7ffa4{/executors/threadDump/json,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@402f80f5{/static,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@3113a37{/,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@4e9658b5{/api,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@54ec8cc9{/jobs/job/kill,null,AVAILABLE,@Spark}
17/08/12 02:38:28 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@5528a42c{/stages/stage/kill,null,AVAILABLE,@Spark}
17/08/12 02:38:29 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@2a037324{/metrics/json,null,AVAILABLE,@Spark}
17/08/12 02:38:32 INFO FileInputFormat: Total input paths to process : 10
17/08/12 02:38:32 INFO FileOutputCommitter: File Output Committer Algorithm version is 1
[Stage 0:>                                                         (0 + 0) / 10][Stage 0:>                                                         (0 + 6) / 10][Stage 0:>                                                        (0 + 10) / 10][Stage 0:>                                                        (0 + 10) / 10][Stage 0:=====>                                                    (1 + 9) / 10][Stage 0:===========>                                              (2 + 8) / 10]17/08/12 02:39:42 WARN DFSClient: DFSOutputStream ResponseProcessor exception  for block BP-1696099266-192.168.4.14-1468972266503:blk_1073745828_5016
java.io.EOFException: Premature EOF: no length prefix available
	at org.apache.hadoop.hdfs.protocolPB.PBHelper.vintPrefixed(PBHelper.java:2282)
	at org.apache.hadoop.hdfs.protocol.datatransfer.PipelineAck.readFields(PipelineAck.java:244)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer$ResponseProcessor.run(DFSOutputStream.java:733)
17/08/12 02:39:42 WARN DFSClient: Error Recovery for block BP-1696099266-192.168.4.14-1468972266503:blk_1073745828_5016 in pipeline DatanodeInfoWithStorage[192.168.4.17:50010,DS-d5cf341a-3862-4780-86ee-f81b00985f0b,DISK], DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]: bad datanode DatanodeInfoWithStorage[192.168.4.17:50010,DS-d5cf341a-3862-4780-86ee-f81b00985f0b,DISK]
17/08/12 02:39:42 WARN DFSClient: DataStreamer Exception
java.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]], original=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:925)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:988)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1156)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.processDatanodeError(DFSOutputStream.java:871)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:401)
[Stage 0:=================>                                        (3 + 7) / 10][Stage 0:=======================>                                  (4 + 6) / 10][Stage 0:=============================>                            (5 + 5) / 10][Stage 0:========================================>                 (7 + 3) / 10][Stage 0:==============================================>           (8 + 2) / 10][Stage 0:====================================================>     (9 + 1) / 10]17/08/12 02:40:03 ERROR LiveListenerBus: Listener EventLoggingListener threw an exception
java.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]], original=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:925)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:988)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1156)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.processDatanodeError(DFSOutputStream.java:871)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:401)
[Stage 1:>                                                        (0 + 10) / 10][Stage 1:=====>                                                    (1 + 9) / 10][Stage 1:===========>                                              (2 + 8) / 10][Stage 1:=================>                                        (3 + 7) / 10][Stage 1:=======================>                                  (4 + 6) / 10][Stage 1:=============================>                            (5 + 5) / 10][Stage 1:==================================>                       (6 + 4) / 10][Stage 1:========================================>                 (7 + 3) / 10][Stage 1:==============================================>           (8 + 2) / 10][Stage 1:====================================================>     (9 + 1) / 10]17/08/12 02:40:31 ERROR LiveListenerBus: Listener EventLoggingListener threw an exception
java.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]], original=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:925)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:988)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1156)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.processDatanodeError(DFSOutputStream.java:871)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:401)
[Stage 2:>                                                        (0 + 12) / 50][Stage 2:>                                                        (0 + 18) / 50][Stage 2:====>                                                    (4 + 18) / 50][Stage 2:======>                                                  (6 + 18) / 50][Stage 2:==========>                                              (9 + 18) / 50][Stage 2:============>                                           (11 + 18) / 50][Stage 2:=============>                                          (12 + 18) / 50][Stage 2:================>                                       (15 + 18) / 50][Stage 2:===================>                                    (17 + 18) / 50][Stage 2:====================>                                   (18 + 18) / 50][Stage 2:======================>                                 (20 + 18) / 50][Stage 2:========================>                               (22 + 18) / 50][Stage 2:=========================>                              (23 + 18) / 50][Stage 2:==========================>                             (24 + 18) / 50][Stage 2:=============================>                          (26 + 18) / 50][Stage 2:==============================>                         (27 + 18) / 50][Stage 2:================================>                       (29 + 18) / 50][Stage 2:==================================>                     (31 + 18) / 50][Stage 2:====================================>                   (33 + 17) / 50][Stage 2:========================================>               (36 + 14) / 50][Stage 2:=========================================>              (37 + 13) / 50][Stage 2:==========================================>             (38 + 12) / 50][Stage 2:====================================================>    (46 + 4) / 50][Stage 2:=====================================================>   (47 + 3) / 50][Stage 2:======================================================>  (48 + 2) / 50]17/08/12 02:40:53 ERROR LiveListenerBus: Listener EventLoggingListener threw an exception
java.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]], original=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:925)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:988)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1156)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.processDatanodeError(DFSOutputStream.java:871)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:401)
[Stage 3:>                                                        (0 + 18) / 50][Stage 3:=>                                                       (1 + 18) / 50][Stage 3:===>                                                     (3 + 18) / 50][Stage 3:=========>                                               (8 + 18) / 50][Stage 3:==========>                                              (9 + 18) / 50][Stage 3:===========>                                            (10 + 18) / 50][Stage 3:=============>                                          (12 + 18) / 50][Stage 3:==============>                                         (13 + 18) / 50][Stage 3:=================>                                      (16 + 18) / 50][Stage 3:=====================>                                  (19 + 18) / 50][Stage 3:=======================>                                (21 + 18) / 50][Stage 3:========================>                               (22 + 18) / 50][Stage 3:============================>                           (25 + 15) / 50][Stage 3:=============================>                          (26 + 14) / 50][Stage 3:===============================>                        (28 + 12) / 50][Stage 3:================================>                       (29 + 12) / 50][Stage 3:===================================>                    (32 + 12) / 50][Stage 3:======================================>                 (34 + 12) / 50][Stage 3:=========================================>              (37 + 10) / 50][Stage 3:===========================================>             (38 + 9) / 50][Stage 3:=============================================>           (40 + 9) / 50][Stage 3:==============================================>          (41 + 8) / 50][Stage 3:===============================================>         (42 + 7) / 50][Stage 3:====================================================>    (46 + 4) / 50][Stage 3:======================================================>  (48 + 2) / 50][Stage 3:=======================================================> (49 + 1) / 50]17/08/12 02:41:06 ERROR LiveListenerBus: Listener EventLoggingListener threw an exception
java.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]], original=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:925)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:988)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1156)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.processDatanodeError(DFSOutputStream.java:871)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:401)
[Stage 4:>                                                        (0 + 18) / 50][Stage 4:=>                                                       (1 + 18) / 50][Stage 4:====>                                                    (4 + 18) / 50][Stage 4:=====>                                                   (5 + 18) / 50][Stage 4:==========>                                              (9 + 18) / 50][Stage 4:=============>                                          (12 + 18) / 50][Stage 4:==============>                                         (13 + 18) / 50][Stage 4:===============>                                        (14 + 18) / 50][Stage 4:===================>                                    (17 + 18) / 50][Stage 4:====================>                                   (18 + 18) / 50][Stage 4:======================>                                 (20 + 17) / 50][Stage 4:========================>                               (22 + 15) / 50][Stage 4:============================>                           (25 + 13) / 50][Stage 4:=============================>                          (26 + 12) / 50][Stage 4:==============================>                         (27 + 12) / 50][Stage 4:================================>                       (29 + 12) / 50][Stage 4:===================================>                    (32 + 12) / 50][Stage 4:====================================>                   (33 + 11) / 50][Stage 4:======================================>                 (34 + 11) / 50][Stage 4:==========================================>             (38 + 10) / 50][Stage 4:============================================>            (39 + 9) / 50][Stage 4:==============================================>          (41 + 7) / 50][Stage 4:===============================================>         (42 + 6) / 50][Stage 4:==================================================>      (44 + 6) / 50][Stage 4:===================================================>     (45 + 5) / 50][Stage 4:====================================================>    (46 + 4) / 50][Stage 4:=====================================================>   (47 + 3) / 50][Stage 4:======================================================>  (48 + 2) / 50][Stage 4:=======================================================> (49 + 1) / 50]17/08/12 02:41:18 ERROR LiveListenerBus: Listener EventLoggingListener threw an exception
java.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]], original=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:925)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:988)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1156)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.processDatanodeError(DFSOutputStream.java:871)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:401)
[Stage 5:>                                                        (0 + 18) / 50][Stage 5:=>                                                       (1 + 18) / 50][Stage 5:==>                                                      (2 + 18) / 50][Stage 5:===>                                                     (3 + 18) / 50][Stage 5:=====>                                                   (5 + 18) / 50][Stage 5:==========>                                              (9 + 17) / 50][Stage 5:==============>                                         (13 + 14) / 50][Stage 5:===================>                                    (17 + 12) / 50][Stage 5:====================>                                   (18 + 12) / 50][Stage 5:=====================>                                  (19 + 12) / 50][Stage 5:======================>                                 (20 + 12) / 50][Stage 5:========================>                               (22 + 12) / 50][Stage 5:=========================>                              (23 + 12) / 50][Stage 5:==========================>                             (24 + 12) / 50][Stage 5:============================>                           (25 + 12) / 50][Stage 5:===============================>                        (28 + 12) / 50][Stage 5:================================>                       (29 + 12) / 50][Stage 5:=================================>                      (30 + 12) / 50][Stage 5:==================================>                     (31 + 12) / 50][Stage 5:===================================>                    (32 + 12) / 50][Stage 5:====================================>                   (33 + 12) / 50][Stage 5:========================================>               (36 + 12) / 50][Stage 5:===========================================>            (39 + 10) / 50][Stage 5:=============================================>           (40 + 9) / 50][Stage 5:===============================================>         (42 + 7) / 50][Stage 5:=================================================>       (43 + 7) / 50][Stage 5:===================================================>     (45 + 5) / 50][Stage 5:=====================================================>   (47 + 3) / 50][Stage 5:======================================================>  (48 + 2) / 50][Stage 5:=======================================================> (49 + 1) / 50]17/08/12 02:41:29 ERROR LiveListenerBus: Listener EventLoggingListener threw an exception
java.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]], original=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:925)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:988)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1156)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.processDatanodeError(DFSOutputStream.java:871)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:401)
[Stage 6:>                                                        (0 + 18) / 50][Stage 6:=>                                                       (1 + 18) / 50][Stage 6:======>                                                  (6 + 18) / 50][Stage 6:=======>                                                 (7 + 18) / 50][Stage 6:==========>                                              (9 + 17) / 50][Stage 6:=============>                                          (12 + 14) / 50][Stage 6:================>                                       (15 + 12) / 50][Stage 6:===================>                                    (17 + 12) / 50][Stage 6:====================>                                   (18 + 12) / 50][Stage 6:======================>                                 (20 + 12) / 50][Stage 6:=========================>                              (23 + 12) / 50][Stage 6:==========================>                             (24 + 12) / 50][Stage 6:============================>                           (25 + 12) / 50][Stage 6:==============================>                         (27 + 12) / 50][Stage 6:===============================>                        (28 + 12) / 50][Stage 6:==================================>                     (31 + 11) / 50][Stage 6:====================================>                   (33 + 10) / 50][Stage 6:=======================================>                (35 + 10) / 50][Stage 6:=========================================>               (36 + 9) / 50][Stage 6:===========================================>             (38 + 7) / 50][Stage 6:=============================================>           (40 + 6) / 50][Stage 6:==============================================>          (41 + 6) / 50][Stage 6:===============================================>         (42 + 6) / 50][Stage 6:=================================================>       (43 + 6) / 50][Stage 6:==================================================>      (44 + 6) / 50][Stage 6:===================================================>     (45 + 5) / 50][Stage 6:=====================================================>   (47 + 3) / 50][Stage 6:======================================================>  (48 + 2) / 50]17/08/12 02:41:41 ERROR LiveListenerBus: Listener EventLoggingListener threw an exception
java.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]], original=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:925)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:988)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1156)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.processDatanodeError(DFSOutputStream.java:871)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:401)
[Stage 7:>                                                        (0 + 18) / 50][Stage 7:=>                                                       (1 + 18) / 50][Stage 7:=====>                                                   (5 + 17) / 50][Stage 7:===========>                                            (10 + 15) / 50][Stage 7:==============>                                         (13 + 12) / 50][Stage 7:=================>                                      (16 + 12) / 50][Stage 7:====================>                                   (18 + 12) / 50][Stage 7:=====================>                                  (19 + 12) / 50][Stage 7:=======================>                                (21 + 12) / 50][Stage 7:==========================>                             (24 + 12) / 50][Stage 7:============================>                           (25 + 12) / 50][Stage 7:=============================>                          (26 + 12) / 50][Stage 7:================================>                       (29 + 12) / 50][Stage 7:=================================>                      (30 + 12) / 50][Stage 7:====================================>                   (33 + 12) / 50][Stage 7:========================================>               (36 + 11) / 50][Stage 7:==========================================>             (38 + 10) / 50][Stage 7:===========================================>            (39 + 10) / 50][Stage 7:=============================================>           (40 + 9) / 50][Stage 7:==============================================>          (41 + 8) / 50][Stage 7:=================================================>       (43 + 7) / 50][Stage 7:===================================================>     (45 + 5) / 50][Stage 7:====================================================>    (46 + 4) / 50][Stage 7:=====================================================>   (47 + 3) / 50][Stage 7:======================================================>  (48 + 2) / 50][Stage 7:=======================================================> (49 + 1) / 50]17/08/12 02:41:53 ERROR LiveListenerBus: Listener EventLoggingListener threw an exception
java.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]], original=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:925)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:988)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1156)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.processDatanodeError(DFSOutputStream.java:871)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:401)
[Stage 8:>                                                        (0 + 18) / 50][Stage 8:=>                                                       (1 + 18) / 50][Stage 8:==>                                                      (2 + 18) / 50][Stage 8:====>                                                    (4 + 18) / 50][Stage 8:=====>                                                   (5 + 18) / 50][Stage 8:=======>                                                 (7 + 18) / 50][Stage 8:============>                                           (11 + 18) / 50][Stage 8:==============>                                         (13 + 16) / 50][Stage 8:================>                                       (15 + 15) / 50][Stage 8:=================>                                      (16 + 14) / 50][Stage 8:===================>                                    (17 + 13) / 50][Stage 8:=====================>                                  (19 + 12) / 50][Stage 8:======================>                                 (20 + 12) / 50][Stage 8:========================>                               (22 + 12) / 50][Stage 8:=========================>                              (23 + 12) / 50][Stage 8:============================>                           (25 + 12) / 50][Stage 8:===============================>                        (28 + 12) / 50][Stage 8:=================================>                      (30 + 12) / 50][Stage 8:==================================>                     (31 + 12) / 50][Stage 8:===================================>                    (32 + 12) / 50][Stage 8:======================================>                 (34 + 12) / 50][Stage 8:========================================>               (36 + 11) / 50][Stage 8:============================================>            (39 + 8) / 50][Stage 8:=============================================>           (40 + 8) / 50][Stage 8:==============================================>          (41 + 7) / 50][Stage 8:===================================================>     (45 + 5) / 50][Stage 8:====================================================>    (46 + 4) / 50][Stage 8:=====================================================>   (47 + 3) / 50][Stage 8:======================================================>  (48 + 2) / 50]17/08/12 02:42:04 ERROR LiveListenerBus: Listener EventLoggingListener threw an exception
java.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]], original=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:925)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:988)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1156)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.processDatanodeError(DFSOutputStream.java:871)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:401)
[Stage 9:>                                                        (0 + 18) / 50][Stage 9:=>                                                       (1 + 18) / 50][Stage 9:==>                                                      (2 + 18) / 50][Stage 9:=======>                                                 (7 + 16) / 50][Stage 9:============>                                           (11 + 13) / 50][Stage 9:===================>                                    (17 + 12) / 50][Stage 9:====================>                                   (18 + 12) / 50][Stage 9:=====================>                                  (19 + 12) / 50][Stage 9:======================>                                 (20 + 12) / 50][Stage 9:==========================>                             (24 + 12) / 50][Stage 9:=============================>                          (26 + 12) / 50][Stage 9:===============================>                        (28 + 12) / 50][Stage 9:=================================>                      (30 + 12) / 50][Stage 9:==================================>                     (31 + 12) / 50][Stage 9:===================================>                    (32 + 12) / 50][Stage 9:====================================>                   (33 + 12) / 50][Stage 9:======================================>                 (34 + 12) / 50][Stage 9:=======================================>                (35 + 12) / 50][Stage 9:=========================================>              (37 + 12) / 50][Stage 9:==============================================>          (41 + 9) / 50][Stage 9:===============================================>         (42 + 8) / 50][Stage 9:=================================================>       (43 + 7) / 50][Stage 9:===================================================>     (45 + 5) / 50][Stage 9:====================================================>    (46 + 4) / 50][Stage 9:=====================================================>   (47 + 3) / 50][Stage 9:=======================================================> (49 + 1) / 50]17/08/12 02:42:14 ERROR LiveListenerBus: Listener EventLoggingListener threw an exception
java.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]], original=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:925)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:988)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1156)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.processDatanodeError(DFSOutputStream.java:871)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:401)
[Stage 10:>                                                       (0 + 18) / 50][Stage 10:==>                                                     (2 + 18) / 50][Stage 10:====>                                                   (4 + 18) / 50][Stage 10:=======>                                                (7 + 18) / 50][Stage 10:==========>                                             (9 + 18) / 50][Stage 10:===============>                                       (14 + 14) / 50][Stage 10:==================>                                    (17 + 12) / 50][Stage 10:===================>                                   (18 + 12) / 50][Stage 10:====================>                                  (19 + 12) / 50][Stage 10:========================>                              (22 + 12) / 50][Stage 10:=========================>                             (23 + 12) / 50][Stage 10:============================>                          (26 + 12) / 50][Stage 10:=============================>                         (27 + 12) / 50][Stage 10:===============================>                       (29 + 12) / 50][Stage 10:=================================>                     (30 + 12) / 50][Stage 10:==================================>                    (31 + 12) / 50][Stage 10:===================================>                   (32 + 12) / 50][Stage 10:====================================>                  (33 + 12) / 50][Stage 10:=====================================>                 (34 + 12) / 50][Stage 10:========================================>              (37 + 10) / 50][Stage 10:============================================>           (40 + 8) / 50][Stage 10:===============================================>        (42 + 8) / 50][Stage 10:================================================>       (43 + 7) / 50][Stage 10:=================================================>      (44 + 6) / 50][Stage 10:==================================================>     (45 + 5) / 50][Stage 10:===================================================>    (46 + 4) / 50][Stage 10:====================================================>   (47 + 3) / 50][Stage 10:======================================================> (49 + 1) / 50]17/08/12 02:42:25 ERROR LiveListenerBus: Listener EventLoggingListener threw an exception
java.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]], original=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:925)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:988)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1156)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.processDatanodeError(DFSOutputStream.java:871)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:401)
[Stage 11:>                                                       (0 + 18) / 50][Stage 11:===>                                                    (3 + 18) / 50][Stage 11:====>                                                   (4 + 18) / 50][Stage 11:======>                                                 (6 + 18) / 50][Stage 11:========>                                               (8 + 18) / 50][Stage 11:==========>                                             (9 + 18) / 50][Stage 11:=============>                                         (12 + 16) / 50][Stage 11:=================>                                     (16 + 13) / 50][Stage 11:==================>                                    (17 + 12) / 50][Stage 11:===================>                                   (18 + 12) / 50][Stage 11:====================>                                  (19 + 12) / 50][Stage 11:=======================>                               (21 + 12) / 50][Stage 11:========================>                              (22 + 12) / 50][Stage 11:===========================>                           (25 + 12) / 50][Stage 11:============================>                          (26 + 12) / 50][Stage 11:===============================>                       (29 + 12) / 50][Stage 11:=================================>                     (30 + 12) / 50][Stage 11:==================================>                    (31 + 12) / 50][Stage 11:=====================================>                 (34 + 12) / 50][Stage 11:=======================================>               (36 + 12) / 50][Stage 11:=============================================>          (41 + 9) / 50][Stage 11:===============================================>        (42 + 8) / 50][Stage 11:================================================>       (43 + 7) / 50][Stage 11:=================================================>      (44 + 6) / 50][Stage 11:===================================================>    (46 + 4) / 50][Stage 11:====================================================>   (47 + 3) / 50][Stage 11:=====================================================>  (48 + 2) / 50][Stage 11:======================================================> (49 + 1) / 50]17/08/12 02:42:35 ERROR LiveListenerBus: Listener EventLoggingListener threw an exception
java.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]], original=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:925)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:988)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1156)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.processDatanodeError(DFSOutputStream.java:871)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:401)
[Stage 12:>                                                        (0 + 0) / 50][Stage 12:>                                                       (0 + 18) / 50][Stage 12:=>                                                      (1 + 18) / 50][Stage 12:=====>                                                  (5 + 18) / 50][Stage 12:=======>                                                (7 + 18) / 50][Stage 12:===========>                                           (10 + 18) / 50][Stage 12:=============>                                         (12 + 18) / 50][Stage 12:==============>                                        (13 + 17) / 50][Stage 12:===============>                                       (14 + 16) / 50][Stage 12:================>                                      (15 + 15) / 50][Stage 12:=======================>                               (21 + 13) / 50][Stage 12:=========================>                             (23 + 12) / 50][Stage 12:=========================>                             (23 + 13) / 50][Stage 12:============================>                          (26 + 12) / 50][Stage 12:=============================>                         (27 + 12) / 50][Stage 12:===============================>                       (29 + 12) / 50][Stage 12:=================================>                     (30 + 12) / 50][Stage 12:==================================>                    (31 + 12) / 50][Stage 12:======================================>                (35 + 10) / 50][Stage 12:========================================>              (37 + 10) / 50][Stage 12:==========================================>            (39 + 10) / 50][Stage 12:============================================>          (40 + 10) / 50][Stage 12:===============================================>        (42 + 8) / 50][Stage 12:=================================================>      (44 + 6) / 50][Stage 12:==================================================>     (45 + 5) / 50][Stage 12:===================================================>    (46 + 4) / 50][Stage 12:====================================================>   (47 + 3) / 50][Stage 12:=====================================================>  (48 + 2) / 50]17/08/12 02:42:44 ERROR LiveListenerBus: Listener EventLoggingListener threw an exception
java.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]], original=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:925)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:988)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1156)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.processDatanodeError(DFSOutputStream.java:871)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:401)
[Stage 13:>                                                       (0 + 18) / 50][Stage 13:====>                                                   (4 + 18) / 50][Stage 13:=============>                                         (12 + 16) / 50][Stage 13:==================>                                    (17 + 12) / 50][Stage 13:===================>                                   (18 + 12) / 50][Stage 13:====================>                                  (19 + 12) / 50][Stage 13:======================>                                (20 + 12) / 50][Stage 13:=========================>                             (23 + 12) / 50][Stage 13:==========================>                            (24 + 12) / 50][Stage 13:=============================>                         (27 + 12) / 50][Stage 13:===============================>                       (29 + 12) / 50][Stage 13:=================================>                     (30 + 12) / 50][Stage 13:===================================>                   (32 + 12) / 50][Stage 13:====================================>                  (33 + 12) / 50][Stage 13:======================================>                (35 + 12) / 50][Stage 13:======================================>                (35 + 13) / 50][Stage 13:=======================================>               (36 + 12) / 50][Stage 13:=========================================>             (38 + 10) / 50][Stage 13:=============================================>          (41 + 9) / 50][Stage 13:===============================================>        (42 + 8) / 50][Stage 13:================================================>       (43 + 7) / 50][Stage 13:=================================================>      (44 + 6) / 50][Stage 13:===================================================>    (46 + 4) / 50][Stage 13:====================================================>   (47 + 3) / 50][Stage 13:=====================================================>  (48 + 2) / 50][Stage 13:======================================================> (49 + 1) / 50]17/08/12 02:42:55 ERROR LiveListenerBus: Listener EventLoggingListener threw an exception
java.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]], original=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:925)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:988)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1156)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.processDatanodeError(DFSOutputStream.java:871)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:401)
[Stage 14:>                                                        (0 + 0) / 50][Stage 14:>                                                       (0 + 12) / 50][Stage 14:======>                                                 (6 + 12) / 50][Stage 14:===============>                                       (14 + 12) / 50][Stage 14:===================>                                   (18 + 12) / 50][Stage 14:=========================>                             (23 + 12) / 50][Stage 14:=================================>                     (30 + 12) / 50][Stage 14:==========================================>            (39 + 11) / 50][Stage 14:==================================================>     (45 + 5) / 50]17/08/12 02:42:57 ERROR LiveListenerBus: Listener EventLoggingListener threw an exception
java.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]], original=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:925)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:988)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1156)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.processDatanodeError(DFSOutputStream.java:871)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:401)
                                                                                17/08/12 02:42:57 ERROR LiveListenerBus: Listener EventLoggingListener threw an exception
java.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]], original=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:925)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:988)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1156)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.processDatanodeError(DFSOutputStream.java:871)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:401)
17/08/12 02:42:58 ERROR LiveListenerBus: Listener EventLoggingListener threw an exception
java.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]], original=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:925)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:988)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1156)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.processDatanodeError(DFSOutputStream.java:871)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:401)
17/08/12 02:42:58 INFO AbstractConnector: Stopped Spark@26b894bd{HTTP/1.1,[http/1.1]}{0.0.0.0:4040}
17/08/12 02:42:58 ERROR Utils: Uncaught exception in thread main
java.lang.IllegalArgumentException: Self-suppression not permitted
	at java.lang.Throwable.addSuppressed(Throwable.java:1043)
	at java.io.FilterOutputStream.close(FilterOutputStream.java:159)
	at sun.nio.cs.StreamEncoder.implClose(StreamEncoder.java:320)
	at sun.nio.cs.StreamEncoder.close(StreamEncoder.java:149)
	at java.io.OutputStreamWriter.close(OutputStreamWriter.java:233)
	at java.io.BufferedWriter.close(BufferedWriter.java:266)
	at java.io.PrintWriter.close(PrintWriter.java:339)
	at org.apache.spark.scheduler.EventLoggingListener$$anonfun$stop$1.apply(EventLoggingListener.scala:230)
	at org.apache.spark.scheduler.EventLoggingListener$$anonfun$stop$1.apply(EventLoggingListener.scala:230)
	at scala.Option.foreach(Option.scala:257)
	at org.apache.spark.scheduler.EventLoggingListener.stop(EventLoggingListener.scala:230)
	at org.apache.spark.SparkContext$$anonfun$stop$7$$anonfun$apply$mcV$sp$5.apply(SparkContext.scala:1917)
	at org.apache.spark.SparkContext$$anonfun$stop$7$$anonfun$apply$mcV$sp$5.apply(SparkContext.scala:1917)
	at scala.Option.foreach(Option.scala:257)
	at org.apache.spark.SparkContext$$anonfun$stop$7.apply$mcV$sp(SparkContext.scala:1917)
	at org.apache.spark.util.Utils$.tryLogNonFatalError(Utils.scala:1317)
	at org.apache.spark.SparkContext.stop(SparkContext.scala:1916)
	at src.main.scala.SimplePageRank$.main(SimplePageRank.scala:66)
	at src.main.scala.SimplePageRank.main(SimplePageRank.scala)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.spark.deploy.SparkSubmit$.org$apache$spark$deploy$SparkSubmit$$runMain(SparkSubmit.scala:755)
	at org.apache.spark.deploy.SparkSubmit$.doRunMain$1(SparkSubmit.scala:180)
	at org.apache.spark.deploy.SparkSubmit$.submit(SparkSubmit.scala:205)
	at org.apache.spark.deploy.SparkSubmit$.main(SparkSubmit.scala:119)
	at org.apache.spark.deploy.SparkSubmit.main(SparkSubmit.scala)
Caused by: java.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]], original=[DatanodeInfoWithStorage[192.168.4.16:50010,DS-bc96f566-3132-482f-a45a-68ec8803d03f,DISK], DatanodeInfoWithStorage[192.168.4.45:50010,DS-3c29c839-4349-4136-8c4b-70878f4cafc5,DISK]]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:925)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:988)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1156)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.processDatanodeError(DFSOutputStream.java:871)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:401)
